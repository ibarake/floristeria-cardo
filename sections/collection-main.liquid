<section id="collection-main" class="page-width">
  <topbar>
    <h3 class="product-count titulo-3">{{ section.settings['total-p'] }} ({{ collection.products_count }})</h3>
    <filter-top>
      <order-by>
        <order-vertical>
          <button id="order-vertical-btn">
            {% render 'square-cards-icon' %}
          </button>
        </order-vertical>
        <order-horizontal>
          <button id="order-horizontal-btn">
            {% render 'horizontal-cards-icon' %}
          </button>
        </order-horizontal>
      </order-by>
      <sort-by>
        {% render 'filter-icon' %}
        <p class="subtitulo-2">Ordenar por</p>
        <select id="sort-by">
          {% assign sort_by = collection.sort_by | default: collection.default_sort_by %}
          {% for option in collection.sort_options %}
            <option
              value="{{ option.value }}"
              {% if option.value == sort_by %}
                selected="selected"
              {% endif %}
            >
              {{ option.name }}
            </option>
          {% endfor %}
        </select>
        <script>
          Shopify.queryParams = {};

          // Preserve existing query parameters
          if (location.search.length) {
              var params = location.search.substr(1).split('&');

              for (var i = 0; i < params.length; i++) {
              var keyValue = params[i].split('=');

              if (keyValue.length) {
                  Shopify.queryParams[decodeURIComponent(keyValue[0])] = decodeURIComponent(keyValue[1]);
              }
              }
          }

          // Update sort_by query parameter on select change
          document.querySelector('#sort-by').addEventListener('change', function(e) {
              var value = e.target.value;

              Shopify.queryParams.sort_by = value;
              location.search = new URLSearchParams(Shopify.queryParams).toString();
          });
        </script>
      </sort-by>
      <button class="filter-drawer-btn" id="parrafo-2">
        <span>
          {% render 'filter-icon' %}
        </span>
        <span> Filtros </span>
      </button>
    </filter-top>
  </topbar>
  <aside>
    <form class="filter-form">
      {%- for filter in collection.filters -%}
        <p class="subtitulo-2">{{ filter.label }}</p>
        <filters class="filter-group">
          {%- for filter_value in filter.values -%}
            <filter class="filter-element">
              <input
                type="checkbox"
                name="{{ filter_value.param_name }}"
                value="{{ filter_value.value }}"
                id="Filter-{{ filter.param_name }}-{{ forloop.index }}"
                {% if filter_value.active -%}
                  checked
                {%- endif %}
                {% if filter_value.count == 0 and filter_value.active == false -%}
                  disabled
                {%- endif %}
              >
              <label for="Filter-{{ filter.param_name }}-{{ forloop.index }}">
                {{- filter_value.label -}}
              </label>
            </filter>
          {%- endfor -%}
        </filters>
      {%- endfor -%}
    </form>
    <script>
            document.addEventListener('DOMContentLoaded', function() {
        var checkboxes = document.querySelectorAll('aside .filter-form input[type="checkbox"]');

        checkboxes.forEach(function(checkbox) {
          checkbox.addEventListener('change', function() {
            this.closest('form').submit();
          });
        });
      });
    </script>
  </aside>
  <content>
    <product-grid>
      {% for product in collection.products %}
        <a class="product-item" href="{{ product.url }}">
          {% include 'product-card',
            hero-product: product,
            atc-btn: section.settings['add-to-cart-title'],
            classes: ''
          %}
          {% include 'hor-product-card',
            hero-product: product,
            atc-btn: section.settings['add-to-cart-title'],
            classes: ''
          %}
        </a>
      {% endfor %}
    </product-grid>
  </content>
</section>
<filter-drawer>
  <top-drawer>
    <span-filtros class="subtitulo-3"> {% render 'filter-icon' %} Filtros </span-filtros>
    <span>
      <button class="close-filter-drawer">
        {% render 'close-drawer' %}
      </button>
    </span>
  </top-drawer>
  <form class="filter-form">
    {%- for filter in collection.filters -%}
      <p class="subtitulo-2">{{ filter.label }}</p>
      <filters class="filter-group">
        {%- for filter_value in filter.values -%}
          <filter class="filter-element">
            <input
              type="checkbox"
              name="{{ filter_value.param_name }}"
              value="{{ filter_value.value }}"
              id="Filter-{{ filter.param_name }}-{{ forloop.index }}"
              {% if filter_value.active -%}
                checked
              {%- endif %}
              {% if filter_value.count == 0 and filter_value.active == false -%}
                disabled
              {%- endif %}
            >
            <label for="Filter-{{ filter.param_name }}-{{ forloop.index }}">
              {{- filter_value.label -}}
            </label>
          </filter>
        {%- endfor -%}
      </filters>
    {%- endfor -%}
    <cont-amg>
      <span class="filter-group-display__erase" id="subtitulo-4">
        <input class="subtitulo-4" type="submit" value="Borrar filtros">
      </span>
      <span class="filter-group-display__submit" id="subtitulo-4">
        <input class="subtitulo-4" type="submit" value="Aplicar filtros">
      </span>
    </cont-amg>
  </form>
</filter-drawer>

<script>
    document.addEventListener('DOMContentLoaded', function() {
      var orderVerticalBtn = document.getElementById('order-vertical-btn');
      var orderHorizontalBtn = document.getElementById('order-horizontal-btn');
      var horPath = document.querySelectorAll('#order-horizontal-btn path');
      var verPath = document.querySelectorAll('#order-vertical-btn path');
      var productGrid = document.querySelector('product-grid');
      var productHorizontalCards = document.querySelectorAll('.horizontal');
      var productVerticalCards = document.querySelectorAll('.vertical');

      orderVerticalBtn.addEventListener('click', function() {
        productVerticalCards.forEach((pc) => {
          pc.style.display = "flex";
        })
        productHorizontalCards.forEach((pc) => {
          pc.style.display = "none";

        })
        orderVerticalBtn.style.backgroundColor = "var(--main-color)";
          orderHorizontalBtn.style.backgroundColor = "transparent";
        horPath.forEach((hp) => {
                  hp.style.fill = "var(--main-linen)";
        })
        verPath.forEach((vp) => {
          vp.style.fill = "var(--linen-3)";
        })
        productGrid.style.gridTemplateColumns = "30% 30% 30%";
      });

      orderHorizontalBtn.addEventListener('click', function() {
        productGrid.classList.add('order-horizontal');
        productGrid.classList.remove('order-vertical');

        productVerticalCards.forEach((pc) => {
          pc.style.display = "none";
        })
        productHorizontalCards.forEach((pc) => {
          pc.style.display = "flex";
        })
        orderVerticalBtn.style.backgroundColor = "transparent";
        orderHorizontalBtn.style.backgroundColor = "var(--main-color)";
        horPath.forEach((hp) => {
          hp.style.fill = "var(--linen-3)";
        })
        verPath.forEach((vp) => {
          vp.style.fill = "var(--main-linen)";
        })
        productGrid.style.gridTemplateColumns = "1fr";
      });
    });

    // FILTER DRAWER COLLECTION

  const filterDisplayBtn = document.querySelectorAll('.filter-drawer-btn');

  filterDisplayBtn.forEach((fbutton) => {
    const drawer = fbutton.parentElement.parentElement.parentElement.parentElement.querySelector('filter-drawer');
    const close = drawer.querySelector('.close-filter-drawer');

    close.addEventListener('click', () => {
      if (drawer.style.bottom === '0px') {
          drawer.style.bottom = '-1000px';
      } else {
          drawer.style.bottom = '0px';
      }
    })
    fbutton.addEventListener('click', () => {
      if (drawer.style.bottom === '0px') {
          drawer.style.bottom = '-1000px';
      } else {
          drawer.style.bottom = '0px';
      }
  });


  });
</script>

{% schema %}
{
  "name": "Collection Main",
  "settings": [
    {
      "type": "text",
      "id": "add-to-cart-title",
      "label": "Titulo principal H1",
      "default": "AÃ±adir al carrito"
    },
    {
      "type": "text",
      "id": "total-p",
      "label": "Total productos titulo H3",
      "default": "Todos los Arreglos"
    }
  ]
}
{% endschema %}
