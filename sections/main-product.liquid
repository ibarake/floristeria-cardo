<section>
  <product-form class="main-product">
    <main-pr-container>
      <div class="flor22-3">
        {% render 'Flor-2' %}
      </div>
      <div class="flor11-3">
        {% render 'Flor-p-1' %}
      </div>
      <div class="flor11-2">
        {% render 'Flor-1' %}
      </div>
      <product-page>
        {{ product.featured_image | img_tag: product.featured_image.alt, 'image-product', '535x533' }}
      </product-page>
      <product-information>
        <p class="subtitulo-3" id="pr-subtitle">
          {{ product.collections[0].title }}
        </p>
        <h3 class="titulo-3" id="pr-title">
          {{ product.title }}
        </h3>
        <h5 class="titulo-5" id="pr-price">
          {{ product.price | money }}
        </h5>
        <product-page id="responsive-image">
          {{ product.featured_image | img_tag: product.featured_image.alt, 'responsive-image-2', '500x500' }}
        </product-page>
        <p class="subtitulo-6" id="pr-description">
          {{ product.description | strip_html }}
        </p>
        <container-buttons>
          {% form 'product', product, class: 'product-form', novalidate: 'novalidate', id: 'pr-form-wd' %}
            <select name="id" style="display: none;">
              {% for variant in product.variants %}
                <option
                  value="{{ variant.id }}"
                  {% if variant == product.selected_or_first_available_variant %}
                    selected="selected"
                  {% endif %}
                >
                  {{ variant.title }} - {{ variant.price | money }}
                </option>
              {% endfor %}
            </select>
            <quantity>
              <input type="button" value="-" class="pq-button button-minus" data-field="quantity">
              <input readonly type="number" step="1" max="" value="1" name="quantity" class="quantity-field">
              <input type="button" value="+" class="pq-button button-plus" data-field="quantity">
            </quantity>
            <add-to-car id="atc">
              <button class="atc-product add-t-cart grow">
                {% render 'icon-cart' %}
                <p class="add-t-cart-text subtitulo-2">
                  {{ section.settings['button-title'] }}
                </p>
              </button>
            </add-to-car>
            <payment class="subtitulo-2 payment-1 grow">
              {{ form | payment_button }}
            </payment>
          {% endform %}
        </container-buttons>
        <faq class="faq-container" id="description-product">
          <question class="FAQ-title subtitulo-3">
            <h3 class="subtitulo-3">
              {{ section.settings['description-title'] }}
            </h3>
            {% render 'icon-arrow-right-dropdown' %}
          </question>
          <answer class="FAQ-text parrafo-2">
            {{ product.description | strip_html }}
          </answer>
        </faq>
        <container-spam>
          {% if section.settings.envio != blank %}
            <shipping class="extra-product">
              {% render 'icon-transport' %}
              <p class="subtitulo-2" id="ss">{{ section.settings.envio }}</p>
            </shipping>
          {% endif %}
          {% if section.settings['info-extra'] != blank %}
            <information class="extra-product">
              {% render 'icon-information' %}
              <p class="subtitulo-2" id="ss">{{ section.settings['info-extra'] }}</p>
            </information>
          {% endif %}
          {% if section.settings['agregar-combo'] != blank %}
            <add-combo>
              <title-add-combo>
                {% render 'button-plus' %}
                <p class="subtitulo-1" id="add-combo-title">
                  {{ section.settings['agregar-combo'] }}
                </p>
              </title-add-combo>
              {% render 'eg-frequently-bought-together' %}
            </add-combo>
          {% endif %}
        </container-spam>
      </product-information>
    </main-pr-container>
  </product-form>
</section>

<script>
  
  
  
  
  
  document.querySelector('title-add-combo').addEventListener('click', () =>{
    if (this.parentElement.querySelector('frequently-bought-together').style.height === 'auto') {
            this.parentElement.querySelector('frequently-bought-together').style.height = '0px';
    } else {
            this.parentElement.querySelector('frequently-bought-together').style.height = 'auto';
    }
  })

  
  /* FAQ DROPDOWN ANIMATION */
document.addEventListener('DOMContentLoaded', function() {
  var faqTitles = document.querySelectorAll('.FAQ-title');
  var openAnswer = null; // Keeps track of the currently open answer
  var openTitle = null; // Keeps track of the currently open FAQ title

  faqTitles.forEach(function(title) {
    title.addEventListener('click', function() {
      var answer = this.nextElementSibling;

      if (openAnswer === answer) {
        // Clicking on the same FAQ title again, close the answer and rotate the SVG back
        toggleSlide(answer);
        rotateSvg(this, '0deg');
        openAnswer = null;
        openTitle = null;
      } else {
        // Clicking on a different FAQ title
        if (openAnswer) {
          // Close the previously open answer and rotate its SVG back
          toggleSlide(openAnswer);
          rotateSvg(openTitle, '0deg');
        }

        // Open the clicked answer and rotate its SVG
        toggleSlide(answer);
        rotateSvg(this, '90deg');
        openAnswer = answer;
        openTitle = this;
      }
    });
  });
});

function toggleSlide(element) {
  var isHidden = getComputedStyle(element).height === '0px';

  if (isHidden) {
    element.style.height = 'auto';
    element.style.marginTop = '15px';
    element.style.marginBottom = '10px';
  } else {
    element.style.height = '0px';
    element.style.marginTop = '0px';
    element.style.marginBottom = '0px';
  }
}

function rotateSvg(title, rotation) {
  var svgElement = title.querySelector('svg');
  svgElement.style.transform = `rotate(${rotation})`;
}

const handleIntersection = (entries, observer) => {
  if (!entries[0].isIntersecting) return;

  observer.unobserve(productRecommendationsSection);

  const url = productRecommendationsSection.dataset.url;

  fetch(url)
    .then(response => response.text())
    .then(text => {
      const html = document.createElement('div');
      html.innerHTML = text;
      const recommendations = html.querySelector('.product-recommendations');

      if (recommendations && recommendations.innerHTML.trim().length) {
        productRecommendationsSection.innerHTML = recommendations.innerHTML;
      }
    })
    .catch(e => {
      console.error(e);
    });
};

const productRecommendationsSection = document.querySelector('.product-recommendations');
const observer = new IntersectionObserver(handleIntersection, {rootMargin: '0px 0px 200px 0px'});

observer.observe(productRecommendationsSection);













</script>

{% schema %}
{
  "name": "Página del producto",
  "settings": [
    {
      "type": "text",
      "id": "envio",
      "label": "Contenido del item envíos "
    }, {
      "type": "text",
      "id": "info-extra",
      "label": "Contenido del item informacion extra "
    }, {
      "type": "text",
      "id": "button-title",
      "label": "Titulo boton",
      "default": "Agregar al carrito"
    }, {
      "type": "product_list",
      "id": "collection",
      "label": "collection"
    }, {
      "type": "text",
      "id": "button-text",
      "label": "Boton de texto",
      "default": "Añadir al carrito"
    }, {
    "type": "text",
    "id": "subtitulo-fotos",
    "label": "Ver Todos",
    "default": "Ver todos"
  }, {
    "type": "text",
    "id": "title",
    "label": "titulo section",
    "default": "Otros Clientes también compraron"
  }, {
    "type": "text",
    "id": "agregar-combo",
    "label": "Agregar a tu Combo",
    "default": "Agregar a tu combo"
  }, {
    "type": "text",
    "id": "recommended-products",
    "label": "Productos recomendados",
    "default": "Otros Clientes también compraron"
  }, {
    "type": "text",
    "id": "complementary-products",
    "label": "Productos complementarios",
    "default": "Agrega a tu combo"
  }, {
    "type": "text",
    "id": "add-to-cart-title",
    "label": "Titulo Boton",
    "default": "Añadir al carrito"
  }, {
    "type": "text",
    "id": "description-title",
    "label": "titulo descipcion",
    "default": "Descripción"
  }
  ]
}
{% endschema %}
